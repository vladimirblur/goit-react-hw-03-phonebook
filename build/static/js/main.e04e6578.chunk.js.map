{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","nameInputID","uuidv4","numberInputID","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","Form","htmlFor","label","input","type","id","onChange","pattern","title","required","Component","Filter","fitlterId","filter","ContactList","contacts","onContactDelete","map","item","contactInfo","onClick","App","addContact","info","contact","verifyDuplication","alert","find","changeFilter","getFilteredContacts","normalizedFilter","toLowerCase","includes","handleContactDelete","contactID","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e04e6578.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"ContactForm_Form__21pBN\",\"label\":\"ContactForm_label__16weh\",\"input\":\"ContactForm_input__oTYN9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__f7Psd\",\"input\":\"Filter_input__pELhv\",\"label\":\"Filter_label__z1q1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__1pTwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__VmDgN\"};","import PropTypes from 'prop-types';\nimport s from './Container.module.css';\n\nexport default function Container({ children }) {\n  return <div className={s.container}>{children}</div>;\n}\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputID = uuidv4();\n  numberInputID = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.Form}>\n        <label htmlFor={this.nameInputID} className={s.label}>\n          Name\n        </label>\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          id={this.nameInputID}\n          onChange={this.handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n\n        <label htmlFor={this.numberInputID} className={s.label}>\n          Number\n        </label>\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"number\"\n          value={this.state.number}\n          id={this.numberInputID}\n          onChange={this.handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n        <button type=\"submit\" className=\"button\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { v4 as uuidv4 } from 'uuid';\nimport PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nexport default function Filter({ value, onChange }) {\n  const fitlterId = uuidv4();\n  return (\n    <div className={s.filter}>\n      <label className={s.label} htmlFor={fitlterId}>\n        Find contacts by name\n      </label>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        id={fitlterId}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ contacts, onContactDelete }) {\n  return (\n    <ul>\n      {contacts.map(({ name, id, number }) => (\n        <li className={s.item} key={id}>\n          <span className={s.contactInfo}>\n            {name}: {number}\n          </span>\n          <button\n            className=\"button\"\n            type=\"button\"\n            onClick={() => onContactDelete(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onContactDelete: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Container from './components/Container';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = info => {\n    const contact = {\n      id: uuidv4(),\n      ...info,\n    };\n\n    if (this.verifyDuplication(contact)) {\n      alert(`${contact.name} is already in contacts`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  verifyDuplication = contact => {\n    const { contacts } = this.state;\n\n    return contacts.find(({ name }) => name === contact.name);\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getFilteredContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  handleContactDelete = contactID => {\n    return this.setState(({ contacts }) => ({\n      contacts: contacts.filter(({ id }) => id !== contactID),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getFilteredContacts();\n\n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onContactDelete={this.handleContactDelete}\n        />\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}